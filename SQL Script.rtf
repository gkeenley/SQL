{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 show databases;\
drop database gkeenley;\
create database gkeenley;\
use gkeenley;\
show tables;\
\
create table room (number int, capacity int, primary key (number));\
\
create table movie (ID int, name varchar(50), year int, primary key (ID));\
\
create table customer (ID int, firstname varchar(30), lastname varchar(30), sex char(1), email varchar(30), primary key (ID));\
\
create table showing (ID int, date date, time time, room_number int, movie_ID int, primary key (ID), foreign key (room_number) references room (number), foreign key (movie_ID) references movie (ID));\
\
create table movie_genres(movie_ID int, genre varchar(20), primary key (movie_ID, genre), foreign key (movie_ID) references movie (ID));\
\
create table customer_showings (customer_ID int, showing_ID int, amount_paid float, rating_given int, primary key (customer_ID, showing_ID), foreign key (customer_ID) references customer (ID), foreign key (showing_ID) references showing (ID));\
\
show tables;\
\
insert into movie values (100,"Star Wars",1977);\
insert into movie values (101,"Up",2009);\
insert into movie values (102,"Pulp Fiction",1994);\
insert into movie values (103,"Aloha",2015);\
insert into movie values (104,"The Martian",2015);\
insert into movie values (105,"The Empire Strikes Back",1980);\
insert into movie values (106,"Midnight In The Garden Of Good and Evil",1997);\
insert into movie values (107,"Tommy Boy",1995);\
insert into movie values (108,"Die Hard",1988);\
insert into movie values (109,"There's Something About Mary",1998);\
insert into movie values (110,"Two Weeks Notice",2002);\
insert into movie values (111,"Back To The Future",1985);\
\
insert into movie values (112,"Lion King",1985);\
\
select * from movie;\
\
insert into customer values (222, "Will", "Beldman", "M", "wbeldman@uwo.ca");\
insert into customer values (223, "Gabe", "Keenleyside", "M", "gkeenley@uwo.ca");\
insert into customer values (224, "Bill", "Clinton", "M", "billy@prez.com");\
insert into customer values (225, "Hillary", "Clinton", "F", "nextprezmaybe@prez.com");\
insert into customer values (226, "Donald", "Trump", "M", "nextprez@prez.com");\
insert into customer values (227, "Gary", "Johnson", "M", "nextpreztoo@prez.com");\
insert into customer values (228, "Jill", "Stein", "F", "nextprezaswell@prez.com");\
insert into customer values (229, "Barack", "Obama", "M", "lastprez@prez.com");\
\
select * from customer;\
\
insert into movie_genres values (100, "Action");\
insert into movie_genres values (100, "SciFi");\
insert into movie_genres values (101, "Animated");\
insert into movie_genres values (102, "Action");\
insert into movie_genres values (103, "Romance");\
insert into movie_genres values (104, "Action");\
insert into movie_genres values (104, "SciFi");\
insert into movie_genres values (105, "Action");\
insert into movie_genres values (105, "SciFi");\
insert into movie_genres values (106, "Drama");\
insert into movie_genres values (107, "Comedy");\
insert into movie_genres values (108, "Action");\
insert into movie_genres values (109, "Comedy");\
insert into movie_genres values (110, "Comedy");\
insert into movie_genres values (110, "Romance");\
insert into movie_genres values (111, "SciFi");\
insert into movie_genres values (111, "Action");\
insert into movie_genres values (111, "Comedy");\
\
select * from movie_genres;\
\
insert into room values (1,30);\
insert into room values (2,5);\
insert into room values (3,100);\
insert into room values (4,30);\
insert into room values (5,6);\
\
select * from room;\
\
insert into showing values (333, "2016-02-11", "9:30pm", 1, 100);\
insert into showing values (334, "2016-02-11", "7:30pm", 2, 100);\
insert into showing values (335, "2016-02-11", "7:00pm", 3, 101);\
insert into showing values (337, "2016-03-12", "7:00pm", 1, 102);\
insert into showing values (338, "2016-03-12", "9:00pm", 1, 103);\
insert into showing values (339, "2016-03-13", "7:00pm", 2, 103);\
insert into showing values (340, "2016-03-20", "7:00pm", 1, 103);\
insert into showing values (341, "2016-03-20", "9:00pm", 1, 104);\
insert into showing values (346, "2016-03-22", "8:30pm", 2, 107);\
insert into showing values (345, "2016-03-22", "9:00pm", 3, 108);\
insert into showing values (342, "2016-03-20", "7:00pm", 2, 109);\
insert into showing values (344, "2016-03-21", "7:00pm", 1, 110);\
insert into showing values (347, "2016-03-23", "10:00pm", 1, 110);\
insert into showing values (336, "2016-02-11", "9:00pm", 2, 111);\
insert into showing values (350, "2016-02-15", "8:00pm", 1, 112);\
\
select * from showing;\
\
insert into customer_showings values (222, 333, 4.00, 5);\
insert into customer_showings values (222, 340, 12.00, 1);\
insert into customer_showings values (222, 334, 10.00, 3);\
insert into customer_showings values (222, 346, 5.00, 4);\
insert into customer_showings values (223, 334, 30.00, 5);\
insert into customer_showings values (223, 340, 5.00, 1);\
insert into customer_showings values (224, 334, 20.00, 4);\
insert into customer_showings values (226, 334, 100.00, 2);\
insert into customer_showings values (225, 334, 5.00, 1);\
insert into customer_showings values (229, 347, 12.00, 5);\
insert into customer_showings values (229, 334, 5.00, 3);\
insert into customer_showings values (223, 350, 3.00, 5);\
\
select * from customer_showings;\
\
update customer set firstname="Sue" where firstname="Jill";\
\
update customer_showings set rating_given=5 where showing_ID in (select ID from showing where movie_ID in (select ID from movie where name="Star Wars"));\
\
select lastname as 'Last Name' from customer group by lastname having count(lastname)>1;\
\
select lastname as 'Last Name' from customer group by lastname having count(lastname)=1;\
\
select firstname as 'First Name', lastname as 'Last Name', email as 'Email' from customer where sex="M";\
\
select name as 'Movie Name' from movie where ID in (select movie_ID from movie_genres where genre="Comedy");\
\
select name as 'Movie Name', year as 'Movie Release Year' from movie where year like "19%" order by year;\
\
select DATE_FORMAT(date,'%M-%d-%Y') as 'Showing Date', TIME_FORMAT(time, '%r') as 'Showing Time', capacity from showing join room on showing.room_number=room.number;\
\
select name as 'Movie Name' from movie where name like '%the %';\
\
select firstname as 'First Name', lastname as 'Last Name', name as 'Movie Name' from customer join customer_showings on customer.ID=customer_showings.customer_ID join showing on customer_showings.showing_ID=showing.ID join movie on showing.movie_ID=movie.ID where showing.date>='2016-03-01';\
\
select distinct firstname as 'First Name', lastname as 'Last Name' from customer join customer_showings on customer.ID=customer_showings.customer_ID join showing on customer_showings.showing_ID=showing.ID join movie on showing.movie_ID=movie.ID join movie_genres on movie_genres.movie_ID=movie.ID where movie_genres.genre='SciFi';\
\
\
create view IDs_of_movies_without_showings as select movie.ID from movie where movie.ID not in (select movie.ID from movie join showing on movie.ID=showing.movie_ID);\
\
create view names_of_movies_without_showings as select movie.name from movie where movie.ID in (select ID from IDs_of_movies_without_showings);\
\
select name as 'Movie Name' from names_of_movies_without_showings;\
\
\
create view info_on_showings_selected_by_customers as select * from showing join customer_showings on showing.ID=customer_showings.showing_ID;\
\
create view IDs_of_movies_shown_but_not_watched as select showing.movie_ID from showing where showing.movie_ID not in (select movie_ID from info_on_showings_selected_by_customers);\
\
create view names_of_movies_shown_but_not_watched as select movie.name from movie where movie.ID in (select Movie_ID from IDs_of_movies_shown_but_not_watched);\
\
select name as 'Movie Name' from names_of_movies_shown_but_not_watched;\
\
\
create view names_of_movies_not_seen as select name from names_of_movies_shown_but_not_watched union select name from names_of_movies_without_showings;\
\
select name as 'Movie Name' from names_of_movies_not_seen;\
\
\
select year as 'Year', count(*) as 'Number of Movies That Year' from movie group by year;\
\
select sum(amount_paid) as 'Total Sales Value of All Showings' from customer_showings;\
\
select showing_ID as 'ID of Showing', count(*) as 'Customers Who Attended', room.capacity as 'Room Capacity' from customer_showings join showing on customer_showings.showing_ID=showing.ID join room on room.number=showing.room_number group by customer_showings.showing_ID;\
\
create view customer_movie_history as select customer.firstname, customer.lastname, movie.name, avg(customer_showings.rating_given) from customer join customer_showings on customer.ID=customer_showings.customer_ID join showing on customer_showings.showing_ID=showing.ID join movie on showing.movie_ID=movie.ID group by customer.firstname, customer.lastname, movie.name;\
\
select * from customer_movie_history;\
\
delete from customer_showings where customer_showings.customer_ID in (select customer.ID from customer where customer.lastname='Trump');\
\
delete from customer where customer.lastname='Trump';\
\
select * from customer_showings;\
\
select * from customer;\
\
delete from showing where room_number=3;\
\
delete from room where number=3;\
\
select * from showing;\
\
select * from room;\
}